<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lukasz Kaniowski]]></title>
  <link href="http://lukaszkaniowski.pl//atom.xml" rel="self"/>
  <link href="http://lukaszkaniowski.pl//"/>
  <updated>2013-02-17T22:06:25+00:00</updated>
  <id>http://lukaszkaniowski.pl//</id>
  <author>
    <name><![CDATA[Łukasz Kaniowski]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Yeoman Cucumber Generator]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2013/02/17/yeoman-cucumber-generator/"/>
    <updated>2013-02-17T21:46:00+00:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2013/02/17/yeoman-cucumber-generator</id>
    <content type="html"><![CDATA[<p>Rails world has some great generators thanks to project like Thor.</p>

<p>Now similar things are happening in node.js envirenment. Checkout <a href="http://yeoman.io/">yeoman</a> project for details.</p>

<p>I decided to try it out. Here is my first yeoman generator: <a href="https://github.com/lukasz-kaniowski/generator-cucumber">generator-cucumber</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef solo repo seed]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2013/01/06/chef-repo-seed/"/>
    <updated>2013-01-06T18:13:00+00:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2013/01/06/chef-repo-seed</id>
    <content type="html"><![CDATA[<p>If you need to create new repository for chef-solo simply execute commands below and you are good to go:</p>

<pre><code>    $ git clone https://github.com/lukasz-kaniowski/chef-solo-seed.git your-repo
    $ cd your-repo
    $ bundle
    $ librarian-chef install
</code></pre>

<p>Now you should be able to create new roles and apply them using command below:</p>

<pre><code>    $ chef-solo -c solo.rb -r "role[sample]"
</code></pre>

<p>Chef rocks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Utils for Admob Mediation with TapForTap]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/08/23/android-utils-for-admob-mediation-with-tapfortap/"/>
    <updated>2012-08-23T15:37:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/08/23/android-utils-for-admob-mediation-with-tapfortap</id>
    <content type="html"><![CDATA[<p>I created simple utils (<a href="https://github.com/lukasz-kaniowski/android_utils">link</a> to github project) that display ads from admob mediation.</p>

<p>I also included <a href="http://r.tapfortap.com/8zyN9">TapForTap</a> as one of the providers. This service is really great. It advertise your app for free. In return you will need to display ads of other app to earn points for displaying your own ads.</p>

<p>What ads providers do you use in your app?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Best markdown editor for mac: Mou]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/08/23/best-markdown-editor-for-mac-mou/"/>
    <updated>2012-08-23T13:39:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/08/23/best-markdown-editor-for-mac-mou</id>
    <content type="html"><![CDATA[<p>Lately for editing markdown files I started using <a href="http://mouapp.com/">Mou</a>.</p>

<p>It is very simple and quick.
It have two pane view, so you can see how your markdown will looks like i.e. on github.</p>

<p>Additionally, you can add solarized theme to it.</p>

<p>Take a look:</p>

<p><img src="http://lukaszkaniowski.pl//images/mou/mou.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release your jar to github]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/08/22/release-your-jar-to-github/"/>
    <updated>2012-08-22T23:45:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/08/22/release-your-jar-to-github</id>
    <content type="html"><![CDATA[<p>If you ever need to quickly publish any of your jars to the public, quickest way is to use github.</p>

<h3>Create maven repo on github</h3>

<p>You need to create repository on github, in my case i called it maven-repository.</p>

<p>You need to clone this repo locally as this is where you will be releasing your jars.</p>

<h3>Pom configuration and settings.xml</h3>

<p>To your project&#8217;s pom you need to add this lines</p>

<pre><code>&lt;scm&gt;
    &lt;url&gt;https://github.com/lukasz-kaniowski/android_utils&lt;/url&gt;
    &lt;connection&gt;scm:git:https://github.com/lukasz-kaniowski/android_utils&lt;/connection&gt;
    &lt;developerConnection&gt;scm:git:https://github.com/lukasz-kaniowski/android_utils&lt;/developerConnection&gt;
&lt;/scm&gt;
&lt;distributionManagement&gt;
    &lt;repository&gt;
        &lt;id&gt;github-repo&lt;/id&gt;
        &lt;url&gt;https://github.com/lukasz-kaniowski/maven-repository/raw/master&lt;/url&gt;
    &lt;/repository&gt;
&lt;/distributionManagement&gt;
</code></pre>

<p>Actually you will not be publishing your jars directly to github but to your local clone of github repository. To do so you need to override <code>distributionManagement</code> variable. Best is to do this in <code>~/.m2/settings.xml</code></p>

<pre><code>&lt;profile&gt;
    &lt;id&gt;deploy-github&lt;/id&gt;
    &lt;properties&gt;
        &lt;altDeploymentRepository&gt;release-repo::default::file:/path/to/local/github/repo&lt;/altDeploymentRepository&gt;
    &lt;/properties&gt;
&lt;/profile&gt;
</code></pre>

<p>Now you are good to go.</p>

<h3>Release your jar</h3>

<p>Process of releasing jar is straightforward:</p>

<pre><code>cd /path/to/your/mvn/project
mvn release:prepare
mvn release:perform -Pdeploy-github
</code></pre>

<p>Next you need to push changes from your local clone of github repo</p>

<pre><code>cd /path/to/local/github/repo
git add .
git commit -m "new jar release"
git push origin master
</code></pre>

<h3>Configure maven project to use your new github repository</h3>

<p>To use your released jars you will need to add this line into your project&#8217;s pom</p>

<pre><code>&lt;repositories&gt;
    &lt;repository&gt;
        &lt;id&gt;Repo on Github&lt;/id&gt;
        &lt;url&gt;https://github.com/lukasz-kaniowski/maven-repository/raw/master&lt;/url&gt;
    &lt;/repository&gt;
&lt;/repositories&gt;
</code></pre>

<p>Nothing else left to say than just that <strong>Github is awesome!!!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Dropbox Sync Tool]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/08/05/git-dropbox-sync-tool/"/>
    <updated>2012-08-05T15:01:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/08/05/git-dropbox-sync-tool</id>
    <content type="html"><![CDATA[<p>I often use dropbox folder as a remote for my local git repositories.</p>

<p>Lately I found this great shell <a href="https://github.com/agnoster/git-dropbox">script</a>, that makes work with your dropbox very easy.</p>

<p>It is really great but I wanted more functionality, so on top of that I created gem: <a href="https://rubygems.org/gems/git-dropbox">git-dropbox on rubygems</a></p>

<h2>Git Dropbox Gem</h2>

<p>This gem lets you syncs your repository by executing command <code>git dropbox sync</code>.</p>

<p>If you have multiple git repositorys and you want to be sure that all of them are sync to drobpox you can execute
<code>git dropbox sync --all</code>. It will sync all of the known repositories.</p>

<p>For installation instruction and more details please check git-dropbox <a href="https://github.com/lukasz-kaniowski/git-dropbox">github page</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating Cli Gem Quickly]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/08/02/creating-cli-gem-quickly/"/>
    <updated>2012-08-02T01:18:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/08/02/creating-cli-gem-quickly</id>
    <content type="html"><![CDATA[<p>So you have some small, repetitive task to do. You create a script (bash, rake, thor) and you store it locally. After some time you forget where
it is and how to use it.</p>

<p>You could create a gem  and then add thor to it (described in this <a href="http://chrisparai.so/creating-a-gem-from-a-thor-applicaton/" title="Creating a Gem From a Thor Applicaton">article</a>). It&#8217;s good but we can do better.</p>

<p>Here is a quick tutorial how.</p>

<h2>Install ore and thor template</h2>

<p><a href="https://github.com/ruby-ore/ore">Ore</a> is a ruby project generator.</p>

<p><code>$ gem install ore</code></p>

<p>Ore generetes project based on templates. It has some templates built in, but you can also create your own.
There wasn&#8217;t any template for thor so I created <a href="https://github.com/lukasz-kaniowski/cli">one</a>. Install it:</p>

<p><code>$ ore install https://github.com/lukasz-kaniowski/cli</code></p>

<h2>Generate thor project</h2>

<p>Now you are ready to create your thor gem.</p>

<ol>
<li>Create project &#8216;helloworld&#8217; <code>$ mine helloworld -s "summary" -D "description" --cli --bundler</code></li>
<li>Install to your local gems <code>$ rake install</code></li>
<li>Test it <code>$ helloworld</code> and <code>$ helloworld sample</code></li>
</ol>


<p>Thats all, now you can create cli gems in seconds.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rush your cloud]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/08/01/rush-your-cloud/"/>
    <updated>2012-08-01T10:33:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/08/01/rush-your-cloud</id>
    <content type="html"><![CDATA[<h2>Blitz on heroku and cloudfront</h2>

<p>There is a great performance testing tool out there and it calls <a href="http://blitz.io/bb8Efr2XeUJewKEdOjRU7OM">blitz.io</a>. If you haven&#8217;t already try it, just give it a shot.
It&#8217;s free for basic usage.</p>

<p>I decided to check how  basic <a href="http://www.sinatrarb.com/">sinatra app</a> behave on <a href="http://www.heroku.com/">heroku</a> and <a href="http://www.cloudfoundry.com/">cloudfoundry</a>.</p>

<h3>Sinatra app</h3>

<p>Creation of sinatra app is very trivial. Just create a file <code>hello.rb</code></p>

<figure class='code'><figcaption><span>hello.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="s2">&quot;Hello World!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Blitz needs to verify if you are owner of the app to make a rush. Simple add this to <code>hello.rb</code></p>

<figure class='code'><figcaption><span>hello.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/mu-40e93541-db42b8f5-36bd0540-dcbf7834&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="s1">&#39;42&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Push to Cloud Foundry and Heroku</h3>

<p>Lets deploy it to cloudfoundry. You need to <a href="http://docs.cloudfoundry.com/tools/vmc/installing-vmc.html/">install vmc</a>.</p>

<ol>
<li>Target vmc to cloudfoundry.com <code>vmc target api.cloudfoundry.com</code></li>
<li>Go to directory where you have <code>hello.rb</code> and execute <code>vmc push</code>.</li>
</ol>


<p>To deploy it to heroku please fallow this <a href="https://devcenter.heroku.com/articles/rack">instructions</a></p>

<h3>Rush using Blitz.io</h3>

<p>Now you are ready to make a rush. Bellow are mine results</p>

<h4>Heroku</h4>

<p><img src="http://lukaszkaniowski.pl//images/rush_blitz/heroku_hit_rate.jpg">
<img src="http://lukaszkaniowski.pl//images/rush_blitz/heroku_response.jpg">
<img src="http://lukaszkaniowski.pl//images/rush_blitz/heroku_summary.jpg"></p>

<h4>Cloud Foundry</h4>

<p><img src="http://lukaszkaniowski.pl//images/rush_blitz/cloud_hit.png">
<img src="http://lukaszkaniowski.pl//images/rush_blitz/cloud_response.jpg">
<img src="http://lukaszkaniowski.pl//images/rush_blitz/cloud_summary.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Maven and Android]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/07/14/android-maven/"/>
    <updated>2012-07-14T18:13:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/07/14/android-maven</id>
    <content type="html"><![CDATA[<p>I recently started looking into android development. After some time spend consuming information from the web it seems like
a lot of android development is done only on eclipse, without help from maven build tool.</p>

<p>If you are like me, comming from java enterprise world, you probably want to use maven for setuping and building your projects.
Below i described a few tools that come in handy for the job.</p>

<h3>Android Archetypes</h3>

<p>Archetypes for android will help bootstrap your android project. Setup instructions are <a href="https://github.com/akquinet/android-archetypes">here</a></p>

<figure class='code'><figcaption><span>generate maven structure</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mvn archetype:generate -Dfilter<span class="o">=</span>android
</span><span class='line'><span class="c"># choose =&gt; de.akquinet.android.archetypes:android-quickstart</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Git setup</h3>

<p>It&#8217;s good to ignore android specyfic directories.</p>

<figure class='code'><figcaption><span>git with .gitignore</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> &lt;project&gt;
</span><span class='line'>git init
</span><span class='line'>
</span><span class='line'><span class="c"># ignore files specyfic to android</span>
</span><span class='line'>curl https://raw.github.com/github/gitignore/master/Android.gitignore &gt;&gt; .gitignore
</span><span class='line'>curl https://raw.github.com/github/gitignore/master/Maven.gitignore &gt;&gt; .gitignore
</span><span class='line'>
</span><span class='line'><span class="c"># First commit</span>
</span><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;init&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Host your own maven repository on github</h3>

<p>From time to time you will bump onto situation where there is no maven artifact for
the library you want to use. Solution is simple: host this library on your github account. Check
<a href="http://blog.marrowboy.co.uk/2011/11/08/how-to-host-a-maven-repo-on-github/">here</a>
for setup instructions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intellij solarized]]></title>
    <link href="http://lukaszkaniowski.pl//blog/2012/06/20/intellij-solarized/"/>
    <updated>2012-06-20T18:13:00+01:00</updated>
    <id>http://lukaszkaniowski.pl//blog/2012/06/20/intellij-solarized</id>
    <content type="html"><![CDATA[<p><a href="http://www.jetbrains.com/idea/">Intellij</a> is great. But even better if you add beautiful colors to it.</p>

<p><a href="http://ethanschoonover.com/solarized">Solarized</a> is a popular color scheme. It can be applied for a numbers of applications (intellij amongst them).</p>

<p>And this is how intellij looks like after applying this great colors.
<img src="http://lukaszkaniowski.pl//images/solarized-pom.png"></p>

<p>Here are installation <a href="https://github.com/jkaving/intellij-colors-solarized">instructions</a>.</p>

<p>I highly reccomend trying it out!</p>
]]></content>
  </entry>
  
</feed>
